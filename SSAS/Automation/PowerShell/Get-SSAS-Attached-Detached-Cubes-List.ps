# Define SSAS instances to scan
$ssasInstances = @("SSAS02\\TABULAR")  # Replace with your actual instance names

# Load AMO assemblies using partial name (no path drama)
[System.Reflection.Assembly]::LoadWithPartialName("Microsoft.AnalysisServices") | Out-Null
[System.Reflection.Assembly]::LoadWithPartialName("Microsoft.AnalysisServices.Tabular") | Out-Null

# Initialize result list
$allModels = @()

foreach ($instance in $ssasInstances) {
    try {
        Write-Host "Connecting to instance: $instance"
        $server = New-Object Microsoft.AnalysisServices.Server
        $server.Connect($instance)

        # Extract server name for UNC path
        $serverName = ($instance -split "\\")[0]

        # Get attached Tabular models
        foreach ($db in $server.Databases) {
            if ($db.Model) {
                $allModels += [PSCustomObject]@{
                    Instance           = $instance
                    Name               = $db.Name
                    ID                 = $db.ID
                    CompatibilityLevel = $db.CompatibilityLevel
                    Status             = "Attached"
                    Path               = "N/A"
                }
            }
        }

        # Get detached models via UNC path
        $localPath = $server.ServerProperties["DataDir"].Value
        $uncPath = "\\$serverName\" + ($localPath -replace ":", "$")

        Write-Host "Scanning UNC path: $uncPath"
        $dirs = Get-ChildItem -Path $uncPath -Directory -ErrorAction SilentlyContinue

        foreach ($dir in $dirs) {
            $modelFile = Get-ChildItem -Path $dir.FullName -Recurse -Include "Model.abf" -ErrorAction SilentlyContinue
            if ($modelFile) {
                $alreadyListed = $allModels | Where-Object { $_.Name -eq $dir.Name -and $_.Instance -eq $instance }
                if (-not $alreadyListed) {
                    $allModels += [PSCustomObject]@{
                        Instance           = $instance
                        Name               = $dir.Name
                        ID                 = "N/A"
                        CompatibilityLevel = "Unknown"
                        Status             = "Detached"
                        Path               = $dir.FullName
                    }
                }
            }
        }

        $server.Disconnect()
    }
    catch {
        Write-Warning "Failed to connect to $instance. Error: $_"
    }
}

# Export to CSV
$csvPath = "SSAS_Tabular_Model_Audit.csv"
$allModels | Export-Csv -Path $csvPath -NoTypeInformation -Encoding UTF8

Write-Host "Audit complete. Results saved to: $csvPath"
