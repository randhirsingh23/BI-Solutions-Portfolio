# Define SSAS instances
$ssasInstances = @("SSAS01", "SSAS02\\TABULAR")

# Load AMO assemblies
[System.Reflection.Assembly]::LoadWithPartialName("Microsoft.AnalysisServices") | Out-Null
[System.Reflection.Assembly]::LoadWithPartialName("Microsoft.AnalysisServices.Tabular") | Out-Null

# Initialize result list
$results = @()

foreach ($instance in $ssasInstances) {
    try {
        $server = New-Object Microsoft.AnalysisServices.Server
        $server.Connect($instance)

        $serverName = ($instance -split "\\")[0]
        $dataDir = $server.ServerProperties["DataDir"].Value
        $uncPath = "\\$serverName\" + ($dataDir -replace ":", "$")

        # Get attached model names
        $attached = @{}
        foreach ($db in $server.Databases) {
            if ($db.Model) {
                $attached[$db.Name] = @{
                    ID = $db.ID
                    CompatibilityLevel = $db.CompatibilityLevel
                }
            }
        }

        # Scan cube folders from drive
        $dirs = Get-ChildItem -Path $uncPath -Directory -ErrorAction SilentlyContinue
        foreach ($dir in $dirs) {
            $modelFile = Get-ChildItem -Path $dir.FullName -Recurse -Include "Model.abf" -ErrorAction SilentlyContinue
            if ($modelFile) {
                $isAttached = $attached.ContainsKey($dir.Name)
                $info = if ($isAttached) { $attached[$dir.Name] } else { @{} }

                $results += [PSCustomObject]@{
                    Instance           = $instance
                    Name               = $dir.Name
                    ID                 = $info.ID ?? "N/A"
                    CompatibilityLevel = $info.CompatibilityLevel ?? "Unknown"
                    Status             = if ($isAttached) { "Attached" } else { "Detached" }
                    Path               = $dir.FullName
                }
            }
        }

        $server.Disconnect()
    }
    catch {
        Write-Warning "$instance failed: $_"
    }
}

# Export to CSV
$results | Export-Csv -Path "SSAS_Cube_Audit.csv" -NoTypeInformation -Encoding UTF8
Write-Host "Audit complete. Saved to SSAS_Cube_Audit.csv"
